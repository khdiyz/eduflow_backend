definitions:
  handler.listSchool:
    properties:
      data:
        items:
          $ref: '#/definitions/models.School'
        type: array
      meta:
        $ref: '#/definitions/models.Pagination'
    type: object
  models.CreateRole:
    properties:
      description:
        $ref: '#/definitions/models.NameTranslations'
      name:
        $ref: '#/definitions/models.NameTranslations'
    type: object
  models.CreateSchool:
    properties:
      address:
        type: string
      currency:
        type: string
      email:
        type: string
      name:
        type: string
      phone_number:
        type: string
      timezone:
        type: string
    required:
    - currency
    - name
    - timezone
    type: object
  models.LoginRequest:
    properties:
      password:
        default: $uper@Adm1n
        type: string
      username:
        default: superadmin
        type: string
    required:
    - password
    - username
    type: object
  models.LoginResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  models.NameTranslations:
    properties:
      en:
        type: string
      ru:
        type: string
      uz:
        type: string
    required:
    - en
    - ru
    - uz
    type: object
  models.Pagination:
    properties:
      limit:
        default: 10
        type: integer
      page:
        default: 1
        type: integer
      page_count:
        type: integer
      total_count:
        type: integer
    type: object
  models.School:
    properties:
      address:
        type: string
      created_at:
        type: string
      currency:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      phone_number:
        type: string
      status:
        type: boolean
      timezone:
        type: string
      updated_at:
        type: string
    type: object
  models.UpdateSchool:
    properties:
      address:
        type: string
      currency:
        type: string
      email:
        type: string
      name:
        type: string
      phone_number:
        type: string
      status:
        type: boolean
      timezone:
        type: string
    required:
    - currency
    - name
    - status
    - timezone
    type: object
  response.BaseResponse:
    properties:
      message:
        type: string
    type: object
  response.IdResponse:
    properties:
      id:
        type: string
    type: object
host: localhost:4040
info:
  contact:
    email: khdiyz.12@gmail.com
    name: Diyorbek Hasanov
  description: API Server for Application
  title: Eduflow API
  version: "1.0"
paths:
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: Login User
      parameters:
      - description: Login User
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.BaseResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.BaseResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.BaseResponse'
      summary: Login User
      tags:
      - Auth
  /api/v1/roles:
    post:
      consumes:
      - application/json
      description: Create Role
      parameters:
      - description: Create Role
        in: body
        name: create
        required: true
        schema:
          $ref: '#/definitions/models.CreateRole'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.BaseResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.BaseResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.BaseResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.BaseResponse'
      security:
      - ApiKeyAuth: []
      summary: Create Role
      tags:
      - Role
  /api/v1/schools:
    get:
      consumes:
      - application/json
      description: Get List School
      parameters:
      - default: 1
        description: page
        in: query
        name: page
        required: true
        type: integer
      - default: 10
        description: limit
        in: query
        name: limit
        required: true
        type: integer
      - description: search school
        in: query
        name: search
        type: string
      - description: status
        in: query
        name: status
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.listSchool'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.BaseResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.BaseResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.BaseResponse'
      security:
      - ApiKeyAuth: []
      summary: Get List School
      tags:
      - School
    post:
      consumes:
      - application/json
      description: Create School
      parameters:
      - description: Create School
        in: body
        name: create
        required: true
        schema:
          $ref: '#/definitions/models.CreateSchool'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.IdResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.BaseResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.BaseResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.BaseResponse'
      security:
      - ApiKeyAuth: []
      summary: Create School
      tags:
      - School
  /api/v1/schools/{id}:
    delete:
      consumes:
      - application/json
      description: Delete School
      parameters:
      - description: school id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BaseResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.BaseResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.BaseResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.BaseResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete School
      tags:
      - School
    get:
      consumes:
      - application/json
      description: Get School
      parameters:
      - description: school id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.School'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.BaseResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.BaseResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.BaseResponse'
      security:
      - ApiKeyAuth: []
      summary: Get School
      tags:
      - School
    put:
      consumes:
      - application/json
      description: Update School
      parameters:
      - description: school id
        in: path
        name: id
        required: true
        type: string
      - description: Update School body
        in: body
        name: update
        required: true
        schema:
          $ref: '#/definitions/models.UpdateSchool'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BaseResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.BaseResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.BaseResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.BaseResponse'
      security:
      - ApiKeyAuth: []
      summary: Update School
      tags:
      - School
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
